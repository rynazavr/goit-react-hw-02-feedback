{"version":3,"sources":["Components/Main/Main.js","Components/Header/Header.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Notification/Notification.js","Components/Statistics/Statistics.js","App.js","index.js"],"names":["Main","Header","FeedbackOptions","plusGood","plusNeutral","plusBad","type","onClick","Notification","Statistics","good","neutral","bad","countTotal","countPercentage","App","state","setState","prevState","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAMeA,EAJF,WACX,OAAO,+BCGMC,EAJA,WACb,OAAO,sDCeMC,EAhBS,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAChD,OACE,6BACE,4BAAQC,KAAK,SAASC,QAASJ,GAA/B,QAGA,4BAAQG,KAAK,SAASC,QAASH,GAA/B,WAGA,4BAAQE,KAAK,SAASC,QAASF,GAA/B,SCLSG,EAJM,WACnB,OAAO,mDCiCMC,EAjCI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,gBACpD,OACE,6BACE,0CACCD,IACC,6BACE,2BACE,wCADF,IACuBH,GAEvB,2BACE,2CACCC,GAEH,2BACE,uCACCC,GAEH,2BACE,yCACCC,KAEH,2BACE,qDACCC,IAFH,MAMF,kBAAC,EAAD,QCkCOC,E,4MAzDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPT,SAAW,WACT,EAAKc,UAAS,SAACC,GAAD,MAAgB,CAC5BR,KAAMQ,EAAUR,KAAO,O,EAI3BN,YAAc,WACZ,EAAKa,UAAS,SAACC,GAAD,MAAgB,CAC5BP,QAASO,EAAUP,QAAU,O,EAIjCN,QAAU,WACR,EAAKY,UAAS,SAACC,GAAD,MAAgB,CAC5BN,IAAKM,EAAUN,IAAM,O,EAGzBC,WAAa,WAAO,IAAD,EACc,EAAKG,MACpC,OAFiB,EACTN,KADS,EACHC,QADG,EACMC,K,EAIzBE,gBAAkB,WAChB,OAAK,EAAKE,MAAMN,MAGW,IAAlB,EAAKM,MAAMN,KAAc,EAAKG,cAAcM,QAAQ,GAFpD,G,uDAKD,IAAD,EACwBC,KAAKJ,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACET,SAAUiB,KAAKjB,SACfC,YAAagB,KAAKhB,YAClBC,QAASe,KAAKf,UAEhB,kBAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,WAAYO,KAAKP,WACjBC,gBAAiBM,KAAKN,uB,GAnDdO,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.fa776c16.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Main = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h1>Please leave feedback</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ plusGood, plusNeutral, plusBad }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={plusGood}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={plusNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={plusBad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = () => {\r\n  return <div>No feedback given</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, countTotal, countPercentage }) => {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      {countTotal() ? (\r\n        <div>\r\n          <p>\r\n            <span>Good: </span> {good}\r\n          </p>\r\n          <p>\r\n            <span>Neutral: </span>\r\n            {neutral}\r\n          </p>\r\n          <p>\r\n            <span>Bad: </span>\r\n            {bad}\r\n          </p>\r\n          <p>\r\n            <span>Total: </span>\r\n            {countTotal()}\r\n          </p>\r\n          <p>\r\n            <span>Positive feedback: </span>\r\n            {countPercentage()}%\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport Main from \"./Components/Main/Main\";\nimport Header from \"./Components/Header/Header\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Components/Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  plusGood = () => {\n    this.setState((prevState) => ({\n      good: prevState.good + 1,\n    }));\n  };\n\n  plusNeutral = () => {\n    this.setState((prevState) => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n\n  plusBad = () => {\n    this.setState((prevState) => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n  countTotal = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPercentage = () => {\n    if (!this.state.good) {\n      return 0;\n    }\n    return ((this.state.good * 100) / this.countTotal()).toFixed(2);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Header />\n        <Main />\n        <FeedbackOptions\n          plusGood={this.plusGood}\n          plusNeutral={this.plusNeutral}\n          plusBad={this.plusBad}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          countTotal={this.countTotal}\n          countPercentage={this.countPercentage}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}